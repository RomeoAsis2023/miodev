name: CRUD Operations

on:
  workflow_dispatch:
    inputs:
      operation:
        description: 'CRUD Operation (create, update, delete)'
        required: true
        default: 'create'
      data:
        description: 'Data for the operation (JSON string for create/update)'
        required: false
        default: '{}'
      item_id:
        description: 'Item ID (for update/delete)'
        required: false
        default: '0'

jobs:
  crud_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Perform CRUD operation
      run: |
        echo "Performing CRUD operation: ${{ github.event.inputs.operation }}"
        
        # Read the current data from data.json
        data_file="data.json"
        items=$(cat $data_file | jq '.items')
        
        # Get the input data and parse it
        input_data="${{ github.event.inputs.data }}"
        input_id=${{ github.event.inputs.item_id }}

        # Perform the CRUD operation
        case "${{ github.event.inputs.operation }}" in
          create)
            new_item=$(echo "$input_data" | jq --arg id "$(date +%s)" '. + {id: $id}')
            updated_items=$(echo "$items" | jq --argjson item "$new_item" '. + [$item]')
            ;;
          update)
            updated_items=$(echo "$items" | jq --argjson item "$input_data" --argjson id "$input_id" 'map(if .id == $id then . + $item else . end)')
            ;;
          delete)
            updated_items=$(echo "$items" | jq --argjson id "$input_id" 'map(select(.id != $id))')
            ;;
          *)
            echo "Invalid operation specified"
            exit 1
            ;;
        esac
        
        # Write the updated data back to data.json
        echo "{\"items\": $updated_items}" > $data_file

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git add data.json
        git commit -m "Performed ${{ github.event.inputs.operation }} operation"
        git push
